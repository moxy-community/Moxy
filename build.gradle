// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.50'
    repositories {
        jcenter()
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()

        maven{
            url='https://dl.bintray.com/xanderblinov/maven'
        }
    }

    project.afterEvaluate {

        if (project.plugins.hasPlugin('com.android.library') || project.plugins.hasPlugin('java')) {

            tasks.register("updatePublishVersion") {
                group = "bintraing"
                description = "update publishing version"

                doLast {
                    def module = project.name
                    updatePublishVersion(module)
                }
            }
        }
    }
}

subprojects { project ->
    apply plugin: 'checkstyle'

    task checkstyle(type: Checkstyle) {
        description 'Runs Checkstyle inspection against ICanPlayer sourcesets.'
        group = 'moxy'
        configFile rootProject.file('checkstyle.xml')
        ignoreFailures false
        showViolations true
        classpath = files()
        exclude '**/*.kt'
        source 'src/main/java'
    }

    // check code style after project evaluation
    afterEvaluate {
        check.dependsOn('checkstyle')
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

private void updatePublishVersion(String module) {
    def propertyFile = project.rootProject.file('publish.properties')
    Properties developSettings = new Properties()

    propertyFile.withReader { developSettings.load(it) }

    developSettings.setProperty(module + "_version", "$targetVersion")

    propertyFile.withWriter { developSettings.store(it, null) }
}

ext {
    groupId = 'com.github.moxy-community'
    targetVersion = "2.1.1"

    deps = [
        android: 'com.google.android:android:1.6_r2',
        javapoet: 'com.squareup:javapoet:1.11.1',
        junit: 'junit:junit:4.12',
        mockito: 'org.mockito:mockito-core:2.27.0',
        truth: 'androidx.test.ext:truth:1.1.0',
        compiletesting: 'com.google.testing.compile:compile-testing:0.17',
        asm: ['org.ow2.asm:asm:7.1', 'org.ow2.asm:asm-util:7.1'],
        autoservice: 'com.google.auto.service:auto-service:1.0-rc5',
        autocommon: 'com.google.auto:auto-common:0.10',
        kotlinStdlib: "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
        coroutines: "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.1",
        coroutinesTest: "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.1",
        gradleIncapHelperAnnotations: "net.ltgt.gradle.incap:incap:0.2",
        gradleIncapHelperProcessor  : "net.ltgt.gradle.incap:incap-processor:0.2",
    ]
}
